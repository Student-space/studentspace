{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from './types';\nimport setAuthToken from '../utils/setAuthToken'; //load user\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('http://localhost:5000/users/');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; //register user\n\nexport const userRegister = ({\n  firstName,\n  lastName,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    firstName,\n    lastName,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('http://localhost:5000/users/signup', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    }); // dispatch(loadUser());\n  } catch (error) {\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; //user login\n\nexport const userLogin = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('http://localhost:5000/users/signin', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (error) {\n    // const errors=error.response.data.errors;\n    // if(errors)\n    // {\n    //     errors.forEach(err=>dispatch(setAlert(err.msg,'danger')));\n    // }\n    console.log(error);\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; //user logout\n\nexport const userLogout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["/home/amol/Minr Project/studentspace/studentspaceclient/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","error","userRegister","firstName","lastName","email","password","config","headers","body","JSON","stringify","post","userLogin","console","log","userLogout"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {setAlert} from './alert';\nimport{\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n\n    \n} from './types';\nimport setAuthToken from '../utils/setAuthToken'\n\n\n\n//load user\nexport const loadUser=()=>async dispatch=>{\n    if(localStorage.token){\n        setAuthToken(localStorage.token);\n\n    }\n    \n    try {\n        const res=await axios.get('http://localhost:5000/users/')\n        \n        dispatch({\n            type:USER_LOADED,\n            payload:res.data\n        });\n    \n    } catch (error) {\n        dispatch({\n            type:AUTH_ERROR\n        });\n    }\n}\n\n\n\n//register user\nexport const userRegister=({firstName,lastName,email,password})=>async dispatch=>{\n   \n    const config={\n        headers:{\n            'Content-Type': 'application/json'\n        }\n    }\n    const body=JSON.stringify({firstName,lastName,email,password}); \n\n    try {\n        const res= await axios.post('http://localhost:5000/users/signup',body,config)\n        dispatch({\n            type:REGISTER_SUCCESS,\n            payload:res.data\n        });\n        // dispatch(loadUser());\n    } catch (error) {\n        \n        dispatch({\n            type:REGISTER_FAIL\n        });   \n    }\n}\n\n\n//user login\nexport const userLogin=(email,password)=>async dispatch=>{\n    const config={\n        headers:{\n            'Content-Type': 'application/json'\n        }\n    }\n    const body=JSON.stringify({email,password}); \n\n    try {\n        const res= await axios.post('http://localhost:5000/users/signin',body,config)\n        dispatch({\n            type:LOGIN_SUCCESS,\n            payload:res.data\n        });\n        dispatch(loadUser());\n    } catch (error) {\n        // const errors=error.response.data.errors;\n        // if(errors)\n        // {\n        //     errors.forEach(err=>dispatch(setAlert(err.msg,'danger')));\n        // }\n        console.log(error);\n        dispatch({\n            type:LOGIN_FAIL\n        });   \n    }\n}\n\n\n//user logout\nexport const userLogout=()=>dispatch=>{\n    dispatch({type:LOGOUT})\n}"]},"metadata":{},"sourceType":"module"}