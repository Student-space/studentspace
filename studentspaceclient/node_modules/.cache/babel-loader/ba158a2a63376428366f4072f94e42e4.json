{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/amol/Minr Project/studentspace/studentspaceclient/src/components/layout/Alert.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; // //Alert component\n// const Alert=({alerts})=> \n// /*checking if the array returned from the state is not null and length\n// grater than zero if ture then display the alert component on screen */\n// alerts != null && \n// alerts.length>0\n// //map throught each alert and dispaly the alert based on classNamename of alertType\n// && alerts.map(alert=>(<></>))\n//  // <div key={alert.id} classNameName=\"px-4 py-3 leading-normal text-red-100 bg-red-700 rounded-lg\" role=\"alert\">\n//     //     <p>{alert.msg}</p>\n//     // </div>\n\nconst Alert = ({\n  alerts\n}) => {\n  let alrt = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \" \"\n  }, void 0, false);\n\n  if (alerts != null && alerts.length > 0) {\n    alerts.map(alert => {\n      switch (alert.type) {\n        case `fail`:\n          alrt = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"min-h-screen flex flex-col space-y-4 items-center justify-center bg-gray-100 py-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert flex flex-row items-center bg-red-200 p-5 rounded border-b-2 border-red-300\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert-icon flex items-center bg-red-100 border-2 border-red-500 justify-center h-10 w-10 flex-shrink-0 rounded-full\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-red-500\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    fill: \"currentColor\",\n                    viewBox: \"0 0 20 20\",\n                    className: \"h-6 w-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      \"fill-rule\": \"evenodd\",\n                      d: \"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\",\n                      \"clip-rule\": \"evenodd\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 40,\n                      columnNumber: 7\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 6\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 5\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 4\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert-content ml-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert-title font-semibold text-lg text-red-800\",\n                  children: \"Error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert-description text-sm text-red-600\",\n                  children: alert.msg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 5\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 4\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 3\n            }, this)\n          }, alert.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this);\n\n        case `success`:\n          alrt = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"min-h-screen flex flex-col space-y-4 items-center justify-center bg-gray-100 py-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert flex flex-row items-center bg-green-200 p-5 rounded border-b-2 border-green-300\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert-icon flex items-center bg-green-100 border-2 border-green-500 justify-center h-10 w-10 flex-shrink-0 rounded-full\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-green-500\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    fill: \"currentColor\",\n                    viewBox: \"0 0 20 20\",\n                    className: \"h-6 w-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      \"fill-rule\": \"evenodd\",\n                      d: \"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\",\n                      \"clip-rule\": \"evenodd\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 7\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 6\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 5\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 4\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert-content ml-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert-title font-semibold text-lg text-green-800\",\n                  children: \"Success\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert-description text-sm text-green-600\",\n                  children: alert.msg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 5\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 4\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 3\n            }, this)\n          }, alert.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: alrt\n  }, void 0, false);\n}; //proptypes\n\n\n_c = Alert;\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired\n}; //mapping state to props we get from state\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n}); //exporting\n\n\nexport default connect(mapStateToProps)(Alert);\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/home/amol/Minr Project/studentspace/studentspaceclient/src/components/layout/Alert.js"],"names":["React","PropTypes","connect","Alert","alerts","alrt","length","map","alert","type","msg","id","propTypes","array","isRequired","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAIA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAGA,MAAMC,KAAK,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AACpB,MAAIC,IAAI,gBAAE;AAAA;AAAA,mBAAV;;AACJ,MAAGD,MAAM,IAAI,IAAV,IAAkBA,MAAM,CAACE,MAAP,GAAc,CAAnC,EAAqC;AACjCF,IAAAA,MAAM,CAACG,GAAP,CAAWC,KAAK,IAAG;AACf,cAAOA,KAAK,CAACC,IAAb;AAEI,aAAM,MAAN;AAEAJ,UAAAA,IAAI,gBAAI;AAAoB,YAAA,SAAS,EAAC,mFAA9B;AAAA,mCAGlB;AAAK,cAAA,SAAS,EAAC,mFAAf;AAAA,sCACC;AAAK,gBAAA,SAAS,EAAC,qHAAf;AAAA,uCACC;AAAM,kBAAA,SAAS,EAAC,cAAhB;AAAA,yCACC;AAAK,oBAAA,IAAI,EAAC,cAAV;AACE,oBAAA,OAAO,EAAC,WADV;AAEE,oBAAA,SAAS,EAAC,SAFZ;AAAA,2CAGC;AAAM,mCAAU,SAAhB;AACG,sBAAA,CAAC,EAAC,oMADL;AAEG,mCAAU;AAFb;AAAA;AAAA;AAAA;AAAA;AAHD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,sBADD,eAYC;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,wCACC;AAAK,kBAAA,SAAS,EAAC,gDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,eAIC;AAAK,kBAAA,SAAS,EAAC,wCAAf;AAAA,4BACEG,KAAK,CAACE;AADR;AAAA;AAAA;AAAA;AAAA,wBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAHkB,aAAUF,KAAK,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA,kBAAR;;AA0BJ,aAAM,SAAN;AACKN,UAAAA,IAAI,gBACD;AAAoB,YAAA,SAAS,EAAC,mFAA9B;AAAA,mCACd;AAAK,cAAA,SAAS,EAAC,uFAAf;AAAA,sCACC;AAAK,gBAAA,SAAS,EAAC,yHAAf;AAAA,uCACC;AAAM,kBAAA,SAAS,EAAC,gBAAhB;AAAA,yCACC;AAAK,oBAAA,IAAI,EAAC,cAAV;AACE,oBAAA,OAAO,EAAC,WADV;AAEE,oBAAA,SAAS,EAAC,SAFZ;AAAA,2CAGC;AAAM,mCAAU,SAAhB;AACG,sBAAA,CAAC,EAAC,oHADL;AAEG,mCAAU;AAFb;AAAA;AAAA;AAAA;AAAA;AAHD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,sBADD,eAYC;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,wCACC;AAAK,kBAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,eAIC;AAAK,kBAAA,SAAS,EAAC,0CAAf;AAAA,4BACEG,KAAK,CAACE;AADR;AAAA;AAAA;AAAA;AAAA,wBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AADc,aAAUF,KAAK,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA,kBADH;AA/BL;AAyDH,KA1DD;AA2DH;;AACD,sBACI;AAAA,cACCN;AADD,mBADJ;AAKC,CApED,C,CAsEA;;;KAtEMF,K;AAuENA,KAAK,CAACS,SAAN,GAAkB;AAClBR,EAAAA,MAAM,EAACH,SAAS,CAACY,KAAV,CAAgBC;AADL,CAAlB,C,CAIA;;AACA,MAAMC,eAAe,GAACC,KAAK,KAAG;AAC9BZ,EAAAA,MAAM,EAACY,KAAK,CAACR;AADiB,CAAH,CAA3B,C,CAIA;;;AACA,eAAeN,OAAO,CAACa,eAAD,CAAP,CAA0BZ,KAA1B,CAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\n\n\n\n// //Alert component\n// const Alert=({alerts})=> \n\n// /*checking if the array returned from the state is not null and length\n// grater than zero if ture then display the alert component on screen */\n// alerts != null && \n// alerts.length>0\n\n// //map throught each alert and dispaly the alert based on classNamename of alertType\n// && alerts.map(alert=>(<></>))\n\n//  // <div key={alert.id} classNameName=\"px-4 py-3 leading-normal text-red-100 bg-red-700 rounded-lg\" role=\"alert\">\n//     //     <p>{alert.msg}</p>\n//     // </div>\n\n\nconst Alert=({alerts})=>{\n    let alrt=(<> </>)\nif(alerts != null && alerts.length>0){\n    alerts.map(alert =>{\n        switch(alert.type)\n        {\n            case `fail`:\n            \n            alrt = (<div key={alert.id} className=\"min-h-screen flex flex-col space-y-4 items-center justify-center bg-gray-100 py-6\">\n\n\n\t\t<div className=\"alert flex flex-row items-center bg-red-200 p-5 rounded border-b-2 border-red-300\">\n\t\t\t<div className=\"alert-icon flex items-center bg-red-100 border-2 border-red-500 justify-center h-10 w-10 flex-shrink-0 rounded-full\">\n\t\t\t\t<span className=\"text-red-500\">\n\t\t\t\t\t<svg fill=\"currentColor\"\n\t\t\t\t\t\t viewBox=\"0 0 20 20\"\n\t\t\t\t\t\t className=\"h-6 w-6\">\n\t\t\t\t\t\t<path fill-rule=\"evenodd\"\n\t\t\t\t\t\t\t  d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n\t\t\t\t\t\t\t  clip-rule=\"evenodd\"></path>\n\t\t\t\t\t</svg>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className=\"alert-content ml-4\">\n\t\t\t\t<div className=\"alert-title font-semibold text-lg text-red-800\">\n\t\t\t\t\tError\n\t\t\t\t</div>\n\t\t\t\t<div className=\"alert-description text-sm text-red-600\">\n\t\t\t\t\t{alert.msg}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n            )\n        case `success`:\n             alrt=(\n                <div key={alert.id} className=\"min-h-screen flex flex-col space-y-4 items-center justify-center bg-gray-100 py-6\">\n\t\t<div className=\"alert flex flex-row items-center bg-green-200 p-5 rounded border-b-2 border-green-300\">\n\t\t\t<div className=\"alert-icon flex items-center bg-green-100 border-2 border-green-500 justify-center h-10 w-10 flex-shrink-0 rounded-full\">\n\t\t\t\t<span className=\"text-green-500\">\n\t\t\t\t\t<svg fill=\"currentColor\"\n\t\t\t\t\t\t viewBox=\"0 0 20 20\"\n\t\t\t\t\t\t className=\"h-6 w-6\">\n\t\t\t\t\t\t<path fill-rule=\"evenodd\"\n\t\t\t\t\t\t\t  d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n\t\t\t\t\t\t\t  clip-rule=\"evenodd\"></path>\n\t\t\t\t\t</svg>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className=\"alert-content ml-4\">\n\t\t\t\t<div className=\"alert-title font-semibold text-lg text-green-800\">\n\t\t\t\t\tSuccess\n\t\t\t\t</div>\n\t\t\t\t<div className=\"alert-description text-sm text-green-600\">\n\t\t\t\t\t{alert.msg}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n            )\n        }\n    })\n}\nreturn (\n    <>\n    {alrt}\n    </>\n)\n}\n \n//proptypes\nAlert.propTypes = {\nalerts:PropTypes.array.isRequired\n}\n\n//mapping state to props we get from state\nconst mapStateToProps=state=>({\nalerts:state.alert\n})\n\n//exporting\nexport default connect(mapStateToProps)( Alert);\n\n"]},"metadata":{},"sourceType":"module"}