{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/amol/Minr Project/studentspace/studentspaceclient/src/components/layout/Alert.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; //Alert component\n\nconst Alert = ({\n  alerts\n}) =>\n/*checking if the array returned from the state is not null and length\ngrater than zero if ture then display the alert component on screen */\nalerts != null && alerts.length > 0 //map throught each alert and dispaly the alert based on classname of alertType\n&& alerts.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"px-4 py-3 leading-normal text-red-100 bg-red-700 rounded-lg\",\n  role: \"alert\",\n  children: /*#__PURE__*/_jsxDEV(\"p\", {\n    children: alert.msg\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this)\n}, alert.id, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 5\n}, this)); //proptypes\n\n\n_c = Alert;\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired\n}; //mapping state to props we get from state\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n}); //exporting\n\n\nexport default connect(mapStateToProps)(Alert);\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/home/amol/Minr Project/studentspace/studentspaceclient/src/components/layout/Alert.js"],"names":["React","PropTypes","connect","Alert","alerts","length","map","alert","msg","id","propTypes","array","isRequired","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAIA;;AACA,MAAMC,KAAK,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD;AAEZ;AACA;AACAA,MAAM,IAAI,IAAV,IACAA,MAAM,CAACC,MAAP,GAAc,CADd,CAGA;AAHA,GAIGD,MAAM,CAACE,GAAP,CAAWC,KAAK,iBACf;AAAoB,EAAA,SAAS,EAAC,6DAA9B;AAA4F,EAAA,IAAI,EAAC,OAAjG;AAAA,yBACI;AAAA,cAAIA,KAAK,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ,GAAUD,KAAK,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,QADD,CARH,C,CAmBA;;;KAnBMN,K;AAoBNA,KAAK,CAACO,SAAN,GAAkB;AAClBN,EAAAA,MAAM,EAACH,SAAS,CAACU,KAAV,CAAgBC;AADL,CAAlB,C,CAIA;;AACA,MAAMC,eAAe,GAACC,KAAK,KAAG;AAC9BV,EAAAA,MAAM,EAACU,KAAK,CAACP;AADiB,CAAH,CAA3B,C,CAIA;;;AACA,eAAeL,OAAO,CAACW,eAAD,CAAP,CAA0BV,KAA1B,CAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux';\n\n\n\n//Alert component\nconst Alert=({alerts})=> \n\n/*checking if the array returned from the state is not null and length\ngrater than zero if ture then display the alert component on screen */\nalerts != null && \nalerts.length>0\n\n//map throught each alert and dispaly the alert based on classname of alertType\n&& alerts.map(alert=>(\n    <div key={alert.id} className=\"px-4 py-3 leading-normal text-red-100 bg-red-700 rounded-lg\" role=\"alert\">\n        <p>{alert.msg}</p>\n    </div>\n))\n\n\n\n\n\n \n//proptypes\nAlert.propTypes = {\nalerts:PropTypes.array.isRequired\n}\n\n//mapping state to props we get from state\nconst mapStateToProps=state=>({\nalerts:state.alert\n})\n\n//exporting\nexport default connect(mapStateToProps)( Alert);\n\n"]},"metadata":{},"sourceType":"module"}